CREATE TABLE public.categories (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	user_id uuid NULL,
	created_at timestamptz NULL DEFAULT now(),
	"name" varchar NULL,
	inactive bool NULL DEFAULT false,
	CONSTRAINT categories_pkey PRIMARY KEY (id),
	CONSTRAINT categories_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);

CREATE TABLE public.customers (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	user_id uuid NULL,
	created_at timestamptz NULL DEFAULT now(),
	"name" varchar NULL,
	phone_1 varchar NULL,
	phone_2 varchar NULL,
	document_type varchar NULL,
	document_number varchar NULL,
	email varchar NULL,
	"comments" text NULL,
	CONSTRAINT customers_pkey PRIMARY KEY (id),
	CONSTRAINT customers_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);

CREATE TABLE public.products (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	user_id uuid NULL,
	created_at timestamptz NULL DEFAULT now(),
	"name" varchar NULL,
	category_id int8 NULL,
	price_to_buy numeric NULL,
	price_to_sell numeric NULL,
	stock_is_automatic bool NULL DEFAULT false,
	stock_quantity numeric NULL,
	stock_quantity_minimum numeric NULL,
	unit_sale_type varchar NULL,
	code_bar varchar NULL,
	code_internal varchar NULL,
	image_url varchar NULL,
	description text NULL,
	CONSTRAINT products_pkey PRIMARY KEY (id),
	CONSTRAINT products_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id),
	CONSTRAINT products_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);

CREATE TABLE public.stock_movement (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	user_id uuid NULL,
	created_at timestamptz NULL DEFAULT now(),
	product_id int8 NULL,
	quantity numeric NULL,
	stock_movement_type varchar NULL,
	CONSTRAINT stock_pkey PRIMARY KEY (id),
	CONSTRAINT stock_movement_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);

CREATE TABLE public.store (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	user_id uuid NULL,
	created_at timestamptz NULL DEFAULT now(),
	"name" varchar NULL,
	whatsapp varchar NULL,
	color_primary varchar NULL,
	color_secundary varchar NULL,
	url_paralax_image varchar NULL,
	CONSTRAINT store_pkey PRIMARY KEY (id),
	CONSTRAINT store_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);

CREATE TABLE auth.users (
	instance_id uuid NULL,
	id uuid NOT NULL,
	aud varchar(255) NULL,
	"role" varchar(255) NULL,
	email varchar(255) NULL,
	encrypted_password varchar(255) NULL,
	email_confirmed_at timestamptz NULL,
	invited_at timestamptz NULL,
	confirmation_token varchar(255) NULL,
	confirmation_sent_at timestamptz NULL,
	recovery_token varchar(255) NULL,
	recovery_sent_at timestamptz NULL,
	email_change_token_new varchar(255) NULL,
	email_change varchar(255) NULL,
	email_change_sent_at timestamptz NULL,
	last_sign_in_at timestamptz NULL,
	raw_app_meta_data jsonb NULL,
	raw_user_meta_data jsonb NULL,
	is_super_admin bool NULL,
	created_at timestamptz NULL,
	updated_at timestamptz NULL,
	phone varchar(15) NULL DEFAULT NULL::character varying,
	phone_confirmed_at timestamptz NULL,
	phone_change varchar(15) NULL DEFAULT ''::character varying,
	phone_change_token varchar(255) NULL DEFAULT ''::character varying,
	phone_change_sent_at timestamptz NULL,
	confirmed_at timestamptz NULL GENERATED ALWAYS AS (LEAST(email_confirmed_at, phone_confirmed_at)) STORED,
	email_change_token_current varchar(255) NULL DEFAULT ''::character varying,
	email_change_confirm_status int2 NULL DEFAULT 0,
	banned_until timestamptz NULL,
	reauthentication_token varchar(255) NULL DEFAULT ''::character varying,
	reauthentication_sent_at timestamptz NULL,
	CONSTRAINT users_email_change_confirm_status_check CHECK ((((email_change_confirm_status >= 0) AND (email_change_confirm_status <= 2)))),
	CONSTRAINT users_email_key UNIQUE (email),
	CONSTRAINT users_phone_key UNIQUE (phone),
	CONSTRAINT users_pkey PRIMARY KEY (id)
);
CREATE INDEX users_instance_id_email_idx ON auth.users (instance_id,"lower(email::text)");
CREATE INDEX users_instance_id_idx ON auth.users (instance_id);
